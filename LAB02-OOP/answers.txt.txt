
1. - If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. Does JAVA allow you to do this?


Yes, Java allows to create multiple constructors for a class, as long as each constructor has a different parameter list. This is known as constructor overloading.

In the case of the DigitalVideoDisc class,  could create separate constructors, one with a single String parameter for title and another with a single String parameter for category, but Java would not allow this since the parameter types and counts are the same. This would cause a compilation error because Java could not distinguish between the two constructors.

However, if  use distinct parameter types or different numbers of parameters, Java would allow this. For example:


public class DigitalVideoDisc {
    private String title;
    private String category;
    private float cost;

    // Constructor that takes only title
    public DigitalVideoDisc(String title) {
        this.title = title;
    }

    // Constructor that takes title and category
    public DigitalVideoDisc(String title, String category) {
        this.title = title;
        this.category = category;
    }

    // Constructor that takes title, category, and cost
    public DigitalVideoDisc(String title, String category, float cost) {
        this.title = title;
        this.category = category;
        this.cost = cost;
    }
}



In this example:

The first constructor takes only title.
The second takes both title and category.
The third takes title, category, and cost.
Each constructor has a unique signature, so Java allows all three in the same class. This way,  can create a DigitalVideoDisc object with different sets of information depending on the available data.



